name: PR Comment with PDF Stats

on:
  pull_request:
    branches: [ main ]

jobs:
  pdf-stats:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          texlive-xetex \
          texlive-bibtex-extra \
          biber \
          latexmk \
          texlive-fonts-extra \
          texlive-science \
          poppler-utils \
          mupdf-tools \
          fonts-libertinus

    - name: Build PDF
      run: |
        make cleanall
        make

    - name: Generate PDF statistics
      id: stats
      run: |
        # Get PDF info
        PAGE_COUNT=$(pdfinfo apocalypse-now-desire-and-will.pdf | grep "Pages:" | awk '{print $2}')
        PDF_SIZE=$(stat -c%s apocalypse-now-desire-and-will.pdf)
        PDF_SIZE_KB=$((PDF_SIZE / 1024))
        BOOKMARK_COUNT=$(mutool show apocalypse-now-desire-and-will.pdf outline 2>/dev/null | grep -c "nameddest=" || echo "0")

        # Count bibliography entries
        BIB_COUNT=$(grep -c "^@" paper/everyone.bib || echo "0")

        # Count words (approximate, from tex files)
        WORD_COUNT=$(wc -w paper/*_content.tex | tail -1 | awk '{print $1}')

        # Save to outputs
        echo "page_count=$PAGE_COUNT" >> $GITHUB_OUTPUT
        echo "pdf_size_kb=$PDF_SIZE_KB" >> $GITHUB_OUTPUT
        echo "bookmark_count=$BOOKMARK_COUNT" >> $GITHUB_OUTPUT
        echo "bib_count=$BIB_COUNT" >> $GITHUB_OUTPUT
        echo "word_count=$WORD_COUNT" >> $GITHUB_OUTPUT

    - name: Comment on PR
      uses: actions/github-script@v7
      with:
        script: |
          const stats = {
            pages: '${{ steps.stats.outputs.page_count }}',
            size: '${{ steps.stats.outputs.pdf_size_kb }}',
            bookmarks: '${{ steps.stats.outputs.bookmark_count }}',
            bibEntries: '${{ steps.stats.outputs.bib_count }}',
            words: '${{ steps.stats.outputs.word_count }}'
          };

          const body = `## 📄 PDF Build Statistics

          | Metric | Value |
          |--------|-------|
          | 📖 Pages | ${stats.pages} |
          | 💾 Size | ${stats.size} KB |
          | 🔖 Bookmarks | ${stats.bookmarks} ${stats.bookmarks < 5 ? '⚠️ (low)' : '✅'} |
          | 📚 Bibliography Entries | ${stats.bibEntries} |
          | 📝 Approximate Word Count | ${stats.words} |

          ${stats.bookmarks < 5 ? '⚠️ **Note:** PDF has few or no bookmarks. Consider adding PDF navigation support.\n' : ''}

          *Generated by LaTeX CI on ${new Date().toISOString()}*`;

          // Find existing comment
          const { data: comments } = await github.rest.issues.listComments({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
          });

          const botComment = comments.find(comment =>
            comment.user.type === 'Bot' &&
            comment.body.includes('PDF Build Statistics')
          );

          if (botComment) {
            // Update existing comment
            await github.rest.issues.updateComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: botComment.id,
              body: body
            });
          } else {
            // Create new comment
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: body
            });
          }
